<html>
<head>
<style>
div.zr {
    size: *;
    background-color: #eee;
}
</style>
<script type="text/tiscript">
include "../zrender/zrender.tis"
var zr = zrender.init($(div.zr));
var w = zr.getWidth();
var h = zr.getHeight();

var isMouseDown = false;
zr.on("mousedown", function () {
    isMouseDown = true;
});

zr.on("mouseup", function () {
    isMouseDown = false;
});

var elementStyle = {
    stroke: "#ccc",
    fill: "white"
};

var group = new zrender.Group();
for (var i = 0; i < 10; ++i) {
    var r = 50 * Math.random() + 20;
    var circle = new zrender.Circle({
        shape: {
            cx: 0,
            cy: 0,
            r: r
        },
        position: [
            (w * 0.6 - r * 2) * Math.random() + r + w * 0.2,
            (h * 0.6 - r * 2) * Math.random() + r + h * 0.2
        ],
        style: elementStyle,
        draggable: true
    })
    .on("drag", function () {
		var rect = group.getBoundingRect();
		boundingRect.setShape({
			x: rect.x,
			y: rect.y,
			width: rect.width,
			height: rect.height
		});
    })
    .on("dragenter", function () {
		this.animateStyle()
			.when(200, {
				fill: "#f00"
			})
			.start();
    })
    .on("dragleave", function () {
		this.stopAnimation();
		this.animateStyle()
			.when(200, {
				fill: "#fff"
			})
			.start();
    })
    .on("drop", function () {
		this.stopAnimation();
		this.animateStyle()
			.when(200, {
				fill: "#fff"
			})
			.start();
    });
    group.add(circle);
}
zr.add(group);

var rect = group.getBoundingRect();
var boundingRect = new zrender.Rect({
    shape: {
        cx: 0,
        cy: 0,
        x: rect.x,
        y: rect.y,
        width: rect.width,
        height: rect.height
    },
    style: {
        fill: "none",
        stroke: "#14f1ff"
    }
});
zr.add(boundingRect);
</script>
</head>
<body>
<div.zr/>
</body>
</html>